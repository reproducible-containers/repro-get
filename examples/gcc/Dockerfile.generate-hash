# Generated by repro-get.

# "Timetraveling" Dockerfile for generating the hash file with a past snapshot.

# ⚠️  EXPERIMENTAL ⚠️

# Usage:
# ----------------------------------------------------------
# export DOCKER_BUILDKIT=1
# docker build --output . -f Dockerfile.generate-hash .
# ----------------------------------------------------------

# Output files:
# - SHA256SUMS-amd64: the hash file

ARG BASE_IMAGE=docker.io/library/debian:bullseye-20211220@sha256:2906804d2a64e8a13a434a1a127fe3f6a28bf7cf3696be4223b06276f32f1f2d # debian:bullseye-20211220
ARG PACKAGES="gcc build-essential"
ARG SNAPSHOT_ARCHIVE_BASE=http://snapshot.debian.org/archive/
# Backports do not seem cached in https://debian.notset.fr/
ARG BACKPORTS=0

ARG REPRO_GET_VERSION=v0.1.1
ARG REPRO_GET_SHA256SUMS_SHA256SUM=da4a0fec2e5929b7b94729c6658c45298bdfe35e29c0c5c58ebcca4dfa5dfab2
# "download" or "local"
ARG REPRO_GET_FETCH_MODE=download
ARG REPRO_GET_BINARY_URL=https://github.com/reproducible-containers/repro-get/releases/download/${REPRO_GET_VERSION}/repro-get-${REPRO_GET_VERSION}.linux-${TARGETARCH}${TARGETVARIANT:+-${TARGETVARIANT}}
ARG REPRO_GET_SHA256SUMS_URL=https://github.com/reproducible-containers/repro-get/releases/download/${REPRO_GET_VERSION}/SHA256SUMS

FROM --platform=${TARGETPLATFORM} ${BASE_IMAGE} AS repro-get-download
ARG TARGETARCH
ARG TARGETVARIANT
ARG REPRO_GET_VERSION
ARG REPRO_GET_BINARY_URL
ARG REPRO_GET_SHA256SUMS_URL
ARG REPRO_GET_SHA256SUMS_SHA256SUM
ADD ${REPRO_GET_BINARY_URL} .
ADD ${REPRO_GET_SHA256SUMS_URL} .
RUN \
  echo "${REPRO_GET_SHA256SUMS_SHA256SUM}  SHA256SUMS" >SHASHA && \
  sha256sum -c SHASHA && \
  sha256sum --ignore-missing -c SHA256SUMS && \
  mv repro-get-${REPRO_GET_VERSION}.linux-${TARGETARCH}${TARGETVARIANT:+-${TARGETVARIANT}} repro-get.linux-${TARGETARCH}${TARGETVARIANT:+-${TARGETVARIANT}}  && \
  chmod +x repro-get.linux-${TARGETARCH}${TARGETVARIANT:+-${TARGETVARIANT}}

FROM scratch AS repro-get-local
ARG TARGETARCH
ARG TARGETVARIANT
COPY repro-get.linux-${TARGETARCH}${TARGETVARIANT:+-${TARGETVARIANT}} /

FROM repro-get-${REPRO_GET_FETCH_MODE} AS repro-get


FROM --platform=${TARGETPLATFORM} ${BASE_IMAGE} AS generate-hash
ARG PACKAGES
ARG SNAPSHOT_ARCHIVE_BASE
ARG TARGETARCH
ARG TARGETVARIANT
ARG BACKPORTS
SHELL ["/bin/bash", "-c"]
RUN \
  --mount=type=cache,target=/var/cache/apt \
  --mount=type=cache,target=/var/lib/apt \
  --mount=type=cache,target=/var/cache/repro-get \
  --mount=type=bind,from=repro-get,source=/repro-get.linux-${TARGETARCH}${TARGETVARIANT:+-${TARGETVARIANT}},target=/usr/local/bin/repro-get \
  set -eux -o pipefail; \
  . /etc/os-release && \
  export DEBIAN_FRONTEND=noninteractive && \
  export SOURCE_DATE_EPOCH="$(stat --format=%Y /etc/apt/sources.list)" && \
  snapshot="$(printf "%(%Y%m%dT%H%M%SZ)T\n" "${SOURCE_DATE_EPOCH}")" && \
  echo "deb [check-valid-until=no] ${SNAPSHOT_ARCHIVE_BASE}debian/${snapshot} ${VERSION_CODENAME} main" >/etc/apt/sources.list && \
  echo "deb [check-valid-until=no] ${SNAPSHOT_ARCHIVE_BASE}debian-security/${snapshot} ${VERSION_CODENAME}-security main" >>/etc/apt/sources.list && \
  echo "deb [check-valid-until=no] ${SNAPSHOT_ARCHIVE_BASE}debian/${snapshot} ${VERSION_CODENAME}-updates main" >>/etc/apt/sources.list && \
  if [ "${BACKPORTS}" = 1 ] ; then echo "deb [check-valid-until=no] ${SNAPSHOT_ARCHIVE_BASE}debian/${snapshot} ${VERSION_CODENAME}-backports main" >>/etc/apt/sources.list; fi&& \
  rm -f /etc/apt/apt.conf.d/docker-clean && \
  echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' >/etc/apt/apt.conf.d/keep-cache && \
  apt-get update && \
  mkdir -p /out && \
  /usr/local/bin/repro-get hash generate >"/out/SHA256SUMS-preinstalled" && \
  apt-get install -y --no-install-recommends ${PACKAGES} && \
  /usr/local/bin/repro-get hash generate --dedupe "/out/SHA256SUMS-preinstalled" >"/out/SHA256SUMS-${TARGETARCH}${TARGETVARIANT:+-${TARGETVARIANT}}" && \
  rm -f "/out/SHA256SUMS-preinstalled" && \
  chmod 444 /out/* && \
  touch --date=@${SOURCE_DATE_EPOCH} /out/*

FROM scratch
COPY --from=generate-hash /out/ /
